// This file is auto-generated by @hey-api/openapi-ts

import type {
  AddPetResponse,
  CreateUserResponse,
  FindPetsByStatusResponse,
  FindPetsByTagsResponse,
  GetOrderByIdResponse,
  GetPetByIdResponse,
  GetUserByNameResponse,
  PlaceOrderResponse,
  UpdatePetResponse,
} from './types.gen';

const categorySchemaResponseTransformer = (data: any) => {
  if (data.id) {
    data.id = BigInt(data.id.toString());
  }
  return data;
};

const tagSchemaResponseTransformer = (data: any) => {
  if (data.id) {
    data.id = BigInt(data.id.toString());
  }
  return data;
};

const petSchemaResponseTransformer = (data: any) => {
  if (data.id) {
    data.id = BigInt(data.id.toString());
  }
  if (data.category) {
    data.category = categorySchemaResponseTransformer(data.category);
  }
  if (data.tags) {
    data.tags = data.tags.map((item: any) =>
      tagSchemaResponseTransformer(item),
    );
  }
  return data;
};

export const addPetResponseTransformer = async (
  data: any,
): Promise<AddPetResponse> => {
  data = petSchemaResponseTransformer(data);
  return data;
};

export const updatePetResponseTransformer = async (
  data: any,
): Promise<UpdatePetResponse> => {
  data = petSchemaResponseTransformer(data);
  return data;
};

export const findPetsByStatusResponseTransformer = async (
  data: any,
): Promise<FindPetsByStatusResponse> => {
  data = data.map((item: any) => petSchemaResponseTransformer(item));
  return data;
};

export const findPetsByTagsResponseTransformer = async (
  data: any,
): Promise<FindPetsByTagsResponse> => {
  data = data.map((item: any) => petSchemaResponseTransformer(item));
  return data;
};

export const getPetByIdResponseTransformer = async (
  data: any,
): Promise<GetPetByIdResponse> => {
  data = petSchemaResponseTransformer(data);
  return data;
};

const orderSchemaResponseTransformer = (data: any) => {
  if (data.id) {
    data.id = BigInt(data.id.toString());
  }
  if (data.petId) {
    data.petId = BigInt(data.petId.toString());
  }
  if (data.shipDate) {
    data.shipDate = new Date(data.shipDate);
  }
  return data;
};

export const placeOrderResponseTransformer = async (
  data: any,
): Promise<PlaceOrderResponse> => {
  data = orderSchemaResponseTransformer(data);
  return data;
};

export const getOrderByIdResponseTransformer = async (
  data: any,
): Promise<GetOrderByIdResponse> => {
  data = orderSchemaResponseTransformer(data);
  return data;
};

const userSchemaResponseTransformer = (data: any) => {
  if (data.id) {
    data.id = BigInt(data.id.toString());
  }
  return data;
};

export const createUserResponseTransformer = async (
  data: any,
): Promise<CreateUserResponse> => {
  data = userSchemaResponseTransformer(data);
  return data;
};

export const getUserByNameResponseTransformer = async (
  data: any,
): Promise<GetUserByNameResponse> => {
  data = userSchemaResponseTransformer(data);
  return data;
};
